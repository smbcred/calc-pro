Create a new file client/src/utils/analytics.ts for Google Analytics setup:

typescript// Google Analytics 4 setup
declare global {
  interface Window {
    gtag: (...args: any[]) => void;
    dataLayer: any[];
  }
}

export const GA_MEASUREMENT_ID = 'G-BLR8DKLFN1';

// Initialize Google Analytics
export const initGA = () => {
  if (!GA_MEASUREMENT_ID || process.env.NODE_ENV !== 'production') {
    console.log('Google Analytics not initialized (development mode or no ID)');
    return;
  }

  // Add GA script to head
  const script1 = document.createElement('script');
  script1.async = true;
  script1.src = `https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}`;
  document.head.appendChild(script1);

  // Initialize gtag
  window.dataLayer = window.dataLayer || [];
  window.gtag = function() {
    window.dataLayer.push(arguments);
  };
  window.gtag('js', new Date());
  window.gtag('config', GA_MEASUREMENT_ID, {
    page_path: window.location.pathname,
  });
};

// Track page views
export const trackPageView = (url: string) => {
  if (!window.gtag || !GA_MEASUREMENT_ID) return;
  
  window.gtag('config', GA_MEASUREMENT_ID, {
    page_path: url,
  });
};

// Track events
export const trackEvent = (
  action: string,
  category: string,
  label?: string,
  value?: number
) => {
  if (!window.gtag || !GA_MEASUREMENT_ID) return;
  
  window.gtag('event', action, {
    event_category: category,
    event_label: label,
    value: value,
  });
};

// Track form submissions
export const trackFormSubmit = (formName: string, success: boolean) => {
  trackEvent('form_submit', 'engagement', formName, success ? 1 : 0);
};

// Track calculation results
export const trackCalculation = (creditAmount: number, years: number) => {
  trackEvent('calculation_complete', 'calculator', `${years}_years`, creditAmount);
};

// Track conversion events
export const trackConversion = (value: number, transactionId?: string) => {
  if (!window.gtag || !GA_MEASUREMENT_ID) return;
  
  window.gtag('event', 'purchase', {
    value: value,
    currency: 'USD',
    transaction_id: transactionId,
  });
};

// Track specific user actions for R&D calculator
export const trackCalculatorStep = (step: string) => {
  trackEvent('calculator_step', 'calculator', step);
};

export const trackCheckoutStarted = (planType: string, price: number) => {
  trackEvent('begin_checkout', 'ecommerce', planType, price);
};

export const trackLoginSuccess = (method: string = 'email') => {
  trackEvent('login', 'authentication', method);
};

Also update the index.html file to include the Google Analytics script directly:

html<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-BLR8DKLFN1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-BLR8DKLFN1');
    </script>
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://api.airtable.com">
    <link rel="preconnect" href="https://www.google-analytics.com">
    <link rel="preconnect" href="https://www.googletagmanager.com">
    
    <!-- Preload critical fonts -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style">
    
    <title>R&D Tax Credit Calculator</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>

Update the .env template file:

bash# Analytics (Already configured in code)
# VITE_GA_MEASUREMENT_ID=G-BLR8DKLFN1

# Monitoring
ENABLE_ERROR_TRACKING=true
ENABLE_PERFORMANCE_MONITORING=true

# Existing variables
DATABASE_URL=
AIRTABLE_API_KEY=
AIRTABLE_BASE_ID=
SENDGRID_API_KEY=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

Now add tracking to your key components. For example, update client/src/components/CreditCalculator.tsx:

typescriptimport { trackCalculatorStep, trackCalculation } from '@/utils/analytics';

// In your component, track when users complete steps:
const handleNextStep = () => {
  trackCalculatorStep(`step_${currentStep}_completed`);
  setCurrentStep(currentStep + 1);
};

// Track when calculation is complete:
const handleCalculation = (results: any) => {
  trackCalculation(results.totalCredit, results.years);
  // ... rest of your calculation logic
};

Add tracking to client/src/pages/CheckoutPage.tsx:

typescriptimport { trackCheckoutStarted, trackConversion } from '@/utils/analytics';

// When checkout starts:
useEffect(() => {
  if (selectedPlan) {
    trackCheckoutStarted(selectedPlan.name, selectedPlan.price);
  }
}, [selectedPlan]);

// On successful payment (in your success handler):
const handlePaymentSuccess = (transactionId: string) => {
  trackConversion(selectedPlan.price, transactionId);
  // ... rest of success logic
};

Add tracking to client/src/pages/LoginPage.tsx:

typescriptimport { trackLoginSuccess } from '@/utils/analytics';

// On successful login:
const handleLoginSuccess = () => {
  trackLoginSuccess('email');
  setLocation('/dashboard');
};