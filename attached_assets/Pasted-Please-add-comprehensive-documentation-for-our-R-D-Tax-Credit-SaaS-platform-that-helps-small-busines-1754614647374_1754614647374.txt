Please add comprehensive documentation for our R&D Tax Credit SaaS platform that helps small businesses claim tax credits through an automated, self-serve process.

Create a comprehensive README.md in the root directory:

markdown# R&D Tax Credit Platform

A self-serve software product that helps small businesses in the U.S. claim the R&D tax credit using AI and automation. We guide businesses from discovery through document delivery in a fully automated workflow.

## üéØ Product Overview

Most small business owners don't know the R&D tax credit exists. Our platform provides:

1. **Education** - Learn about eligibility
2. **Estimation** - Calculate potential credits
3. **Payment** - Tiered pricing based on credit size
4. **Documentation** - AI-generated IRS-compliant documents
5. **Delivery** - Secure dashboard with all tax documents

## üöÄ User Journey

### 1Ô∏è‚É£ Discovery & Lead Capture
- Marketing landing page with educational content
- Interactive R&D Tax Credit Calculator
- Real-time credit estimation
- Dynamic pricing based on credit amount
- Email capture for lead nurturing

### 2Ô∏è‚É£ Purchase Flow
- Stripe checkout with tier-based pricing
- Multi-year options (2022, 2023, 2024)
- Immediate access to secure dashboard
- Success confirmation with next steps

### 3Ô∏è‚É£ Data Collection
- Secure customer dashboard
- Multi-step intake form
- Business details and expense collection
- Qualifying R&D activities documentation
- Progress tracking with checklist UI

### 4Ô∏è‚É£ AI Document Generation
- Automated workflow via Make.com
- Claude AI generates:
  - Technical Narrative (IRS requirement)
  - Compliance Memorandum
- Documint creates:
  - IRS Form 6765
  - Section 174A deduction summary
  - State forms (e.g., PA REV-545A)
  - Filing instructions
  - Recordkeeping checklist

### 5Ô∏è‚É£ Secure Delivery
- Documents uploaded to Amazon S3
- Pre-signed URLs for secure access
- Email notification when ready
- Dashboard download center

## üí∞ Pricing Tiers

Dynamic pricing based on estimated credit amount:

| Tier | Credit Range | Price | Features |
|------|-------------|-------|----------|
| Tier 1 | < $10,000 | $500 | All documents, 1 year |
| Tier 2 | $10,000 - $50,000 | $750 | All documents, 1 year |
| Tier 3 | > $50,000 | $1,000 | All documents, 1 year |

Multi-year discount: 20% off additional years

## üõ†Ô∏è Technical Architecture

### Frontend (React + Tailwind)
- **Landing Page**: Marketing and education
- **Calculator**: Multi-step credit estimation
- **Checkout**: Stripe integration
- **Dashboard**: Customer portal
- **Intake Form**: Data collection wizard

### Backend Services
- **Express.js**: API and webhook handling
- **Airtable**: Customer and form data storage
- **PostgreSQL**: Session management
- **Stripe**: Payment processing
- **SendGrid**: Transactional emails

### Automation Pipeline
- **Make.com**: Orchestrates document generation
- **Claude API**: AI narrative writing
- **Documint**: PDF form generation
- **Amazon S3**: Secure file storage

## üìã Setup Instructions

### Prerequisites
- Node.js 18+
- Airtable account with base configured
- Stripe account with products/prices
- SendGrid account with verified sender
- Make.com account (for automation)
- AWS account with S3 bucket

### Environment Variables

Create `.env` file:

\`\`\`bash
# Core Services
DATABASE_URL=postgresql://...
AIRTABLE_API_KEY=key...
AIRTABLE_BASE_ID=app...

# Payment
STRIPE_SECRET_KEY=sk_...
STRIPE_WEBHOOK_SECRET=whsec_...

# Email
SENDGRID_API_KEY=SG...
SENDGRID_FROM_EMAIL=hello@company.com

# Analytics
VITE_GA_MEASUREMENT_ID=G-BLR8DKLFN1

# Future Integrations (via Make.com)
MAKE_WEBHOOK_URL=https://hook.us1.make.com/...
\`\`\`

### Quick Start

1. Clone repository
\`\`\`bash
git clone [repo-url]
cd rd-tax-credit-saas
\`\`\`

2. Install dependencies
\`\`\`bash
npm install
\`\`\`

3. Configure Airtable base (see docs/AIRTABLE_SCHEMA.md)

4. Set up Stripe products:
   - Create 3 products for each tier
   - Add prices for each tax year
   - Configure webhook endpoint

5. Run development server
\`\`\`bash
npm run dev
\`\`\`

## üìä Key Metrics

Track these KPIs in Google Analytics:

- **Conversion Rate**: Calculator ‚Üí Checkout ‚Üí Purchase
- **Credit Range Distribution**: Which tiers are most common
- **Multi-year Adoption**: % choosing multiple years
- **Time to Complete**: Intake form completion time
- **Document Generation**: Success rate and timing

## üîí Security & Compliance

- PCI compliance via Stripe
- Encrypted data transmission
- Secure S3 storage with expiring URLs
- Email-based authentication
- Session management
- Input validation on all forms
- Rate limiting on API endpoints

## üö¢ Deployment

### Current: Replit
- Development environment
- Quick iteration and testing

### Production: Vercel
- Optimized React hosting
- Serverless API routes
- Custom domain support
- Global CDN

## üìà Business Model

1. **Lead Generation**: Free calculator drives email capture
2. **Conversion**: Education ‚Üí Estimation ‚Üí Purchase
3. **Fulfillment**: Automated document generation
4. **Retention**: Annual filing updates

## ü§ù Support

- In-app help documentation
- Email support: support@[yourdomain].com
- FAQ section in dashboard

## üìù Legal

- Privacy Policy required for data collection
- Terms of Service for SaaS agreement
- Disclaimer: Not tax advice, preparation service only

---

Built with ‚ù§Ô∏è to help small businesses claim their R&D tax credits

Create docs/CALCULATOR_LOGIC.md:

markdown# R&D Tax Credit Calculator Logic

## Overview

The calculator guides users through determining eligibility and estimating their potential R&D tax credit. It uses simplified calculations suitable for small businesses.

## Calculation Steps

### Step 1: Eligibility Check
- Business type (C-Corp, S-Corp, LLC, etc.)
- Use of AI/automation tools
- Technical experimentation activities
- U.S.-based operations

### Step 2: Qualifying Activities
User selects from common R&D activities:
- Software development
- Process automation
- AI/ML implementation
- Product development
- Manufacturing improvements
- Technical problem-solving

### Step 3: Expense Collection

#### Wages
- Number of employees doing R&D
- Average salary
- Percentage of time on R&D
- Formula: `Qualified Wages = Employees √ó Avg Salary √ó R&D %`

#### Contractors
- Total contractor costs
- R&D percentage
- Formula: `Qualified Contractors = Contractor Costs √ó R&D %`

#### Supplies & Software
- Cloud computing costs
- Software licenses
- Development tools
- Formula: `Qualified Supplies = Supply Costs √ó R&D %`

### Step 4: Credit Calculation

**Total Qualified Research Expenses (QRE)**
\`\`\`
QRE = Qualified Wages + Qualified Contractors + Qualified Supplies
\`\`\`

**Federal Credit (Simplified Method)**
\`\`\`
Federal Credit = QRE √ó 6.5%
\`\`\`

**State Credits** (if applicable)
\`\`\`
PA Credit = QRE √ó 10% (capped)
Other states vary
\`\`\`

### Step 5: Pricing Tier

Based on federal credit amount:
- < $10,000 ‚Üí Tier 1 ($500)
- $10,000 - $50,000 ‚Üí Tier 2 ($750)
- > $50,000 ‚Üí Tier 3 ($1,000)

Multi-year pricing:
- Base year: Full price
- Additional years: 20% discount each

## Implementation

### Frontend Component
\`\`\`typescript
// Simplified calculation
const calculateCredit = (expenses: Expenses) => {
  const qre = 
    expenses.wages * expenses.wageRdPercent +
    expenses.contractors * expenses.contractorRdPercent +
    expenses.supplies * expenses.suppliesRdPercent;
    
  const federalCredit = qre * 0.065;
  
  const tier = 
    federalCredit < 10000 ? 1 :
    federalCredit < 50000 ? 2 : 3;
    
  const price = 
    tier === 1 ? 500 :
    tier === 2 ? 750 : 1000;
    
  return { qre, federalCredit, tier, price };
};
\`\`\`

### Validation Rules
- Minimum QRE: $10,000 (worth filing)
- Maximum credit shown: $500,000 (enterprise referral)
- R&D percentage: 0-100%
- Required fields before calculation

## User Experience

1. **Progressive Disclosure**: Only show relevant fields
2. **Real-time Updates**: Calculate as user types
3. **Visual Feedback**: Show tier changes with animation
4. **Clear CTAs**: "Get Your Documents" with price
5. **Trust Signals**: "IRS-compliant", "Secure", testimonials

Create docs/INTAKE_FORM_GUIDE.md:

markdown# Intake Form Data Collection Guide

## Purpose

The intake form collects all necessary information to generate IRS-compliant R&D tax credit documentation. It must balance thoroughness with user experience.

## Form Sections

### 1. Company Information
- Legal business name
- EIN (with format validation: XX-XXXXXXX)
- Entity type (C-Corp, S-Corp, LLC, etc.)
- Year founded
- Primary state of operations
- States with R&D activities

### 2. Business Overview
- Industry selection
- Business description (500 chars)
- Products/services offered
- Total revenue (ranges)
- Total employee count

### 3. R&D Activities
- Detailed description of R&D work
- Technical challenges faced
- Experimentation process
- Failed attempts (important for IRS)
- Improvements achieved

### 4. R&D Expenses

#### Employee Costs
For each R&D employee:
- Name/Role
- Annual salary
- % time on R&D
- Start date

#### Contractor Costs
- Company/Individual name
- Total paid
- Services provided
- % R&D work

#### Supply Costs
- Cloud services (AWS, Azure, etc.)
- Software licenses
- Development tools
- Testing equipment

### 5. Documentation
- Existing documentation checkbox
- Types of records kept
- Willingness to maintain records

## Validation Requirements

### Required Fields
- All company information
- At least one R&D activity
- At least one expense category
- Certification checkbox

### Format Validation
- EIN: XX-XXXXXXX format
- Email: Valid format
- Percentages: 0-100
- Currency: Positive numbers only

### Business Rules
- Total R&D % cannot exceed 100%
- Founded year must be reasonable
- Expenses must be within tax year

## Progressive Save

Form data is saved to Airtable after each section:
1. Reduces abandonment
2. Allows return to form
3. Provides partial data for follow-up

## Data Structure in Airtable

\`\`\`json
{
  "companyInfo": {
    "name": "Acme Corp",
    "ein": "12-3456789",
    "entityType": "c-corp",
    "yearFounded": 2020,
    "revenue": "1M-5M",
    "employeeCount": 25,
    "primaryState": "PA",
    "rdStates": ["PA", "NY"]
  },
  "rdActivities": {
    "description": "Developing AI-powered...",
    "challenges": "Technical uncertainty in...",
    "process": "We experimented with...",
    "failures": "Initial approach failed...",
    "improvements": "Achieved 50% efficiency..."
  },
  "expenses": {
    "wages": [...],
    "contractors": [...],
    "supplies": [...]
  }
}
\`\`\`

## UX Best Practices

1. **Section Headers**: Clear indication of progress
2. **Help Text**: Inline explanations for complex fields
3. **Examples**: Show sample entries
4. **Save Indicator**: Auto-save with visual confirmation
5. **Error Messages**: Specific, actionable feedback
6. **Mobile Responsive**: Works on all devices

## Post-Submission

After successful submission:
1. Show confirmation screen
2. Update dashboard checklist
3. Trigger Make.com webhook
4. Send confirmation email
5. Begin document generation

Create docs/MAKE_AUTOMATION.md:

markdown# Make.com Automation Workflows

## Overview

Make.com orchestrates the document generation pipeline after intake form submission. This creates a fully automated flow from data collection to document delivery.

## Main Workflow: Document Generation Pipeline

### Trigger
Webhook from Express API when intake form is completed
- Endpoint: `POST /api/intake/complete`
- Payload: `{ customerId, companyId, email }`

### Workflow Steps

#### 1. Data Aggregation Module
**Airtable - Search Records**
- Get customer record
- Get company information  
- Get all wages records
- Get all expenses records
- Calculate totals

Output:
\`\`\`json
{
  "customer": { /* customer data */ },
  "company": { /* company data */ },
  "totalQRE": 250000,
  "federalCredit": 16250,
  "wages": [ /* wage records */ ],
  "expenses": [ /* expense records */ ]
}
\`\`\`

#### 2. Claude AI - Technical Narrative
**HTTP - Make a Request**
- URL: `https://api.anthropic.com/v1/messages`
- Method: POST
- Headers: 
  - `x-api-key: {{CLAUDE_API_KEY}}`
  - `anthropic-version: 2023-06-01`

Prompt Template:
\`\`\`
Generate a comprehensive IRS-compliant technical narrative for R&D tax credit documentation.

Company Information:
- Name: {{company.name}}
- Industry: {{company.industry}}
- Founded: {{company.yearFounded}}

R&D Activities:
{{company.rdActivities}}

The narrative must address all four tests:
1. Permitted Purpose
2. Technological in Nature  
3. Technical Uncertainty
4. Process of Experimentation

Format as a professional technical document with sections for each test.
\`\`\`

#### 3. Claude AI - Compliance Memo
**HTTP - Make a Request**
Similar setup, different prompt:
\`\`\`
Generate a compliance memorandum explaining the R&D tax credit calculation.

Qualified Research Expenses: ${{totalQRE}}
Federal Credit Calculated: ${{federalCredit}}
Tax Year: {{taxYear}}

Include:
- Calculation methodology
- IRC Section 41 compliance
- Documentation standards
- Record retention requirements
\`\`\`

#### 4. Documint - Form Generation
**Documint - Create Document**

Templates needed:
1. **IRS Form 6765**
   - Map QRE amounts to form fields
   - Calculate credit using simplified method
   
2. **Section 174A Summary**
   - List all deductible R&D expenses
   - Provide amortization schedule
   
3. **State Forms** (if applicable)
   - PA REV-545A
   - Other state credits

#### 5. S3 Upload Module
**AWS S3 - Upload Files**

For each document:
- Bucket: `{{S3_BUCKET}}`
- Key: `/customers/{{customerId}}/{{year}}/{{filename}}`
- ACL: private
- Generate pre-signed URL (7 days)

#### 6. Airtable Update
**Airtable - Create Records**

In Documents table:
\`\`\`json
{
  "customer_id": ["{{customerId}}"],
  "document_type": "{{type}}",
  "document_name": "{{filename}}",
  "s3_url": "{{presignedUrl}}",
  "generated_date": "{{now}}",
  "expires_date": "{{now + 7 days}}",
  "status": "generated"
}
\`\`\`

Update customer record:
- `documents_ready`: true
- `generation_date`: now

#### 7. SendGrid Email
**SendGrid - Send Email**

Template: "Documents Ready"
- To: {{customer.email}}
- Subject: "Your R&D Tax Credit Documents Are Ready"
- Dynamic data:
  - Customer name
  - Credit amount
  - Document list
  - Dashboard link

### Error Handling

Each module includes:
1. **Retry Logic**: 3 attempts with exponential backoff
2. **Error Routes**: Separate path for failures
3. **Notifications**: Admin alerts for failures
4. **Fallback**: Queue for manual processing

### Monitoring

- Webhook logs in Make.com
- Execution history
- Error notifications to Slack/email
- Daily summary reports

## Additional Workflows

### Workflow 2: Stripe Payment Success
Triggers customer creation and welcome email

### Workflow 3: Document Expiry Warning
Runs daily to notify customers 24 hours before URLs expire

### Workflow 4: Annual Update Reminder
Triggers email campaigns for returning customers

## Testing

1. Use Make.com's test webhook feature
2. Create test records in Airtable
3. Verify each module output
4. Check final document quality
5. Confirm email delivery

## Cost Optimization

- Batch multiple customers when possible
- Cache Claude responses for similar cases
- Use S3 lifecycle rules for old documents
- Monitor API usage for each service

Create docs/SECURITY.md:

markdown# Security & Compliance Guide

## Overview

This document outlines security measures for handling sensitive tax and financial data.

## Data Classification

### Highly Sensitive
- Social Security Numbers (if collected)
- Bank account information
- Full tax returns

### Sensitive  
- EIN numbers
- Revenue figures
- Employee salaries
- Email addresses

### Internal Use
- Calculation results
- Document metadata
- System logs

## Security Measures

### Application Security

#### Authentication
- Email-based authentication
- Session management with secure cookies
- Automatic session expiry (24 hours)
- No password storage (magic links planned)

#### Authorization
- Users can only access their own data
- API endpoints verify ownership
- Admin panel separated (future)

#### Input Validation
- Zod schemas on all inputs
- Sanitization of user content
- SQL injection prevention (parameterized queries)
- XSS prevention (React escaping)

### API Security

#### Rate Limiting
- General API: 100 req/15 min
- Login: 5 req/15 min  
- Report generation: 10 req/hour

#### Webhook Security
- Stripe signature verification
- Make.com webhook authentication
- Request origin validation

### Data Protection

#### In Transit
- HTTPS everywhere (enforced by Vercel/Replit)
- TLS 1.2+ only
- Certificate pinning for mobile (future)

#### At Rest
- S3 server-side encryption
- Database encryption (Neon/Airtable)
- No local file storage

#### Access Control
- S3 pre-signed URLs (7 day expiry)
- IAM roles for service access
- Principle of least privilege

### Third-Party Security

#### Stripe
- PCI DSS Level 1 certified
- No card data stored locally
- Tokenization for payments

#### Airtable
- SOC 2 Type II certified
- Encrypted at rest
- Access via API key only

#### SendGrid
- Email authentication (SPF/DKIM)
- Unsubscribe compliance
- No email content logging

## Compliance

### Tax Data Handling
- Follow IRS Publication 4557
- Retain records for 7 years
- Provide audit trail

### Privacy Regulations
- Privacy Policy required
- Data deletion on request
- California privacy rights

### Industry Standards
- OWASP Top 10 compliance
- Regular security updates
- Dependency scanning

## Incident Response

### Detection
- Error monitoring (Winston)
- Anomaly detection in GA
- Customer reports

### Response Plan
1. Identify scope
2. Contain issue
3. Notify affected users
4. Fix vulnerability
5. Post-mortem analysis

### Contact
- Security issues: security@[domain]
- Response time: < 24 hours

## Development Security

### Code Practices
- No secrets in code
- Environment variables only
- Code review for security
- Regular dependency updates

### Testing
- Security headers test
- Input validation testing  
- API authentication testing
- Rate limit testing

## Audit Checklist

Monthly:
- [ ] Review access logs
- [ ] Check failed logins
- [ ] Update dependencies
- [ ] Test backups

Quarterly:
- [ ] Security scan
- [ ] Review permissions
- [ ] Update documentation
- [ ] Staff training
This comprehensive documentation package:

Explains your complete user journey
Details the calculator and pricing logic
Provides clear setup instructions
Documents your automation workflows
Addresses security and compliance
Gives practical implementation guidance

The documentation is written to be useful for developers, business stakeholders, and future team members who need to understand how the system works.